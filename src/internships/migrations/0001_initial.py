# Generated by Django 3.2 on 2021-05-06 06:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import internships.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(blank=True, default=False, null=True, verbose_name='Activated')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, default='', max_length=2048, null=True, unique=True, verbose_name='Name')),
                ('address', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Address')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('professional_sphere', models.TextField(blank=True, default='', null=True, verbose_name='Professional Sphere')),
                ('year_estabilished', models.IntegerField(blank=True, null=True, verbose_name='Year Estabilished')),
                ('number_of_employees', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Number Of Employees')),
                ('phone', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Phone')),
                ('website', models.TextField(blank=True, default='', null=True, verbose_name='Website')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=internships.models.get_company_file_path, verbose_name='Logo')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, verbose_name='Name')),
                ('email', models.EmailField(max_length=2048, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Phone')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(blank=True, default=True, null=True, verbose_name='Activated')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=2048, verbose_name='Name')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('applications_deadline', models.DateField(verbose_name='Appications Deadline')),
                ('seats_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of Students (Max.)')),
                ('description', models.TextField(verbose_name='Description')),
                ('required_knowledge', models.TextField(blank=True, null=True, verbose_name='Required Knowledges and Skills')),
                ('objectives', models.TextField(blank=True, null=True, verbose_name='Objectives')),
                ('short_course_modules', models.TextField(blank=True, default='', null=True, verbose_name='Short Course Modules')),
                ('additional_notes', models.TextField(blank=True, default='', null=True, verbose_name='Additional Notes')),
                ('status', models.CharField(blank=True, choices=[('CALL', 'CALL'), ('ENROLL', 'ENROLL'), ('INTERNSHIP', 'INTERNSHIP'), ('CLOSE', 'CLOSE')], default='CALL', max_length=64, null=True, verbose_name='Status')),
                ('agreement', models.FileField(blank=True, null=True, upload_to=internships.models.get_internship_application_file_path, verbose_name='Agreement')),
                ('academic_coordinator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='university_for_academic_coordinator', to='internships.contactperson')),
                ('academic_tutor', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='university_for_academic_tutor', to='internships.contactperson')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships', to='internships.company')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='internships', to='internships.country')),
                ('hosting_institution_tutor', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='university_for_host_tutor', to='internships.contactperson')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InternshipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('cover_letter', models.TextField(verbose_name='Cover Letter')),
                ('university_assessment', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='University Assessment')),
                ('status', models.CharField(blank=True, choices=[('CONSIDERED', 'CONSIDERED'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='CONSIDERED', max_length=64, null=True, verbose_name='Status')),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='internships.internship')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InternshipStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(blank=True, default=False, null=True, verbose_name='Activated')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Full Name')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female')], default='', max_length=32, null=True, verbose_name='Gender')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('contact_phone', models.CharField(blank=True, default='', max_length=64, null=True, verbose_name='Contact Phone')),
                ('city', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='City')),
                ('main_cv', models.TextField(blank=True, default='', null=True, verbose_name='Main CV')),
                ('facebook', models.TextField(blank=True, default='', null=True, verbose_name='Facebook')),
                ('twitter', models.TextField(blank=True, default='', null=True, verbose_name='Twitter')),
                ('linkedin', models.TextField(blank=True, default='', null=True, verbose_name='LinkedIn')),
                ('instagram', models.TextField(blank=True, default='', null=True, verbose_name='Instagram')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=internships.models.get_student_file_path, verbose_name='Photo')),
                ('identification', models.FileField(blank=True, null=True, upload_to=internships.models.get_student_file_path, verbose_name='Identification')),
                ('university_transcript_records', models.FileField(blank=True, null=True, upload_to=internships.models.get_student_file_path, verbose_name='University Transcript Records')),
                ('language_certificate', models.FileField(blank=True, null=True, upload_to=internships.models.get_student_file_path, verbose_name='Language Certificate')),
                ('university_diploma', models.FileField(blank=True, null=True, upload_to=internships.models.get_student_file_path, verbose_name='University diploma')),
                ('social_disadvantage_certificate', models.FileField(blank=True, null=True, upload_to=internships.models.get_student_file_path, verbose_name='Certificate Of Social Disadvantage')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='internships.country')),
                ('languages', models.ManyToManyField(blank=True, related_name='students', to='internships.Language')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='StudentEducationAcquiredSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSoftSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudentWorkResponsibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='UserConfirmation',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('name', models.CharField(max_length=2048, verbose_name='Name')),
                ('email', models.EmailField(max_length=2048, verbose_name='Email')),
                ('password', models.TextField(verbose_name='Password')),
                ('token', models.TextField(blank=True, null=True, unique=True, verbose_name='Token')),
                ('user_type', models.CharField(choices=[('student', 'student'), ('university', 'university'), ('company', 'company')], max_length=126, verbose_name='User Type')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confirmation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated', models.BooleanField(blank=True, default=False, null=True, verbose_name='Activated')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(blank=True, default='', max_length=2048, null=True, unique=True, verbose_name='Name')),
                ('address', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Address')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('about_department', models.TextField(blank=True, default='', null=True, verbose_name='About Department')),
                ('year_estabilished', models.IntegerField(blank=True, null=True, verbose_name='Year Estabilished')),
                ('number_of_students', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Number Of Students')),
                ('phone', models.CharField(blank=True, default='', max_length=2048, null=True, verbose_name='Phone')),
                ('website', models.TextField(blank=True, default='', null=True, verbose_name='Website')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=internships.models.get_university_file_path, verbose_name='Logo')),
                ('affiliated_companies', models.ManyToManyField(blank=True, related_name='affiliated_universities', to='internships.Company')),
                ('contact_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='universitis', to='internships.contactperson')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='universities', to='internships.country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='university', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='StudentWork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=2048, verbose_name='Company Name')),
                ('locality', models.CharField(max_length=2048, verbose_name='Locality')),
                ('start_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Start Year')),
                ('finish_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Finish Year')),
                ('position_held', models.CharField(max_length=2048, verbose_name='Position Held')),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work', to='internships.student')),
            ],
            options={
                'ordering': ['-finish_year'],
            },
        ),
        migrations.CreateModel(
            name='StudentPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=2048, verbose_name='Title')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Year')),
                ('author', models.CharField(max_length=2048, verbose_name='Author')),
                ('publisher', models.CharField(max_length=2048, verbose_name='Publisher')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='internships.student')),
            ],
            options={
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='StudentEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_name', models.CharField(max_length=2048, verbose_name='University Name')),
                ('locality', models.CharField(max_length=2048, verbose_name='Locality')),
                ('start_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Start Year')),
                ('finish_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Finish Year')),
                ('study_cycle', models.CharField(choices=[('bachelor', 'bachelor'), ('master', 'master'), ('PhD', 'PhD')], max_length=32, verbose_name='Study Cycle')),
                ('degree_program', models.CharField(max_length=2048, verbose_name='Degree Program')),
                ('description', models.TextField(default='', verbose_name='Description')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='internships.student')),
            ],
            options={
                'ordering': ['-finish_year'],
            },
        ),
        migrations.AddField(
            model_name='student',
            name='soft_skills',
            field=models.ManyToManyField(blank=True, related_name='students', to='internships.StudentSoftSkill'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('full_name', models.CharField(max_length=2048, null=True, verbose_name='Full Name')),
                ('staff_type', models.CharField(choices=[('SuperAdmin', 'SuperAdmin'), ('University Representative', 'University Representative'), ('Company Representative', 'Company Representative')], max_length=64, verbose_name='Type')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_users', to='internships.company')),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_users', to='internships.university')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InternshipStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copy_agreement', models.FileField(blank=True, null=True, upload_to=internships.models.get_internship_application_file_path, verbose_name='Copy Agreement')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='intern', to='internships.internshipapplication')),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interns', to='internships.internship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interns', to='internships.student')),
            ],
        ),
        migrations.CreateModel(
            name='InternshipReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_review', models.TextField(blank=True, null=True, verbose_name='University Review')),
                ('student_review', models.TextField(blank=True, null=True, verbose_name='Student Review')),
                ('internship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='internships.internship')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships_reviews', to='internships.student')),
            ],
        ),
        migrations.AddField(
            model_name='internshipapplication',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships_applications', to='internships.student'),
        ),
        migrations.AddField(
            model_name='internship',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships', to='internships.university'),
        ),
        migrations.AddField(
            model_name='company',
            name='contact_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='internships.contactperson'),
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comanies', to='internships.country'),
        ),
        migrations.AddField(
            model_name='company',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL),
        ),
    ]
